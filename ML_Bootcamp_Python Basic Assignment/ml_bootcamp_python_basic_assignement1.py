# -*- coding: utf-8 -*-
"""ML_Bootcamp_Python_Basic_Assignement1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tjfT8dILApC6SdzAkDUbgNLjzbLVgXs2

#1. In the below elements which of them are values or an expression? eg:- values can be integer or string and expressions will be mathematical operators.
*
&#39;hello&#39;
-87.8
-
/
+
6

Values : 'hello', -87.8, 6

Expressions : *, -, /, +

#2. What is the difference between string and variable?

Variables are symbols that you can use to store data in a program and Strings are data used to fill up a variable.

#3. Describe three different data types.

Numeric - In Python, numeric data type represent the data which has numeric value. Numeric value can be integer, floating number or even complex numbers. These values are defined as int, float and complex class in Python.

    Integers – This value is represented by int class. It contains positive or negative whole numbers (without fraction or decimal). In Python there is no limit to how long an integer value can be.
    Float – This value is represented by float class. It is a real number with floating point representation. It is specified by a decimal point. Optionally, the character e or E followed by a positive or negative integer may be appended to specify scientific notation.
    Complex Numbers – Complex number is represented by complex class. It is specified as (real part) + (imaginary part)j. For example – 1+5j

Boolean - Data type with one of the two built-in values, True or False. Boolean objects that are equal to True are truthy (true), and those equal to False are falsy (false). But non-Boolean objects can be evaluated in Boolean context as well and determined to be true or false. It is denoted by the class bool.

Set - In Python, Set is an unordered collection of data type that is iterable, mutable and has no duplicate elements. The order of elements in a set is undefined though it may consist of various elements.

#4. What is an expression made up of? What do all expressions do?

An expression is a combination of values, variables, operators, and calls to functions. Expressions need to be evaluated. If you ask Python to print an expression, the interpreter evaluates the expression and displays the result.

#5. This assignment statements, like spam = 10. What is the difference between an expression and a statement?

An expression evaluates to a single value. A statement does not.

#After running the following code, what does the variable bacon contain?
bacon = 22

bacon + 1

23

#7. What should the values of the following two terms be?
&#39;spam&#39; + &#39;spamspam&#39;

&#39;spam&#39; * 3

spamspamspam

spamspamspam

#8. Why is eggs a valid variable name while 100 is invalid?

Cause Variable names cannot begin with a number.

#9. What three functions can be used to get the integer, floating-point number, or string version of a value?

The int(), float(), and str() functions will evaluate to the integer, floating-point number, and string versions of the value passed to them.

#10. Why does this expression cause an error? How can you fix it?
&#39;I have eaten &#39; + 99 + &#39; burritos.&#39;

The expression causes an error because 99 is an integer, and only strings can be concatenated to other strings with the + operator. The correct way is I have eaten ' + str(99) + ' burritos.'.
"""